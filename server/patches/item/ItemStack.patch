--- a/net/minecraft/item/ItemStack.java
+++ b/net/minecraft/item/ItemStack.java
@@ -80,7 +80,7 @@
     private int count;
     private int cooldown;
     @Deprecated
-    private final Item item;
+    public Item item; // Loom :: public accessor & non-final
     private CompoundTag tag;
     private boolean empty;
     private Entity holder;
@@ -89,6 +89,7 @@
     private CachedBlockPosition lastPlaceOnPos;
     private boolean lastPlaceOnResult;
 
+
     public ItemStack(ItemConvertible itemconvertible) {
         this(itemconvertible, 1);
     }
@@ -108,7 +109,7 @@
         this.updateEmptyState();
     }
 
-    private void updateEmptyState() {
+    public void updateEmptyState() { // Loom :: public accessor
         this.empty = false;
         this.empty = this.isEmpty();
     }
@@ -166,6 +167,16 @@
         PlayerEntity playerentity = itemusagecontext.getPlayer();
         BlockPos blockpos = itemusagecontext.getBlockPos();
         CachedBlockPosition cachedblockposition = new CachedBlockPosition(itemusagecontext.getWorld(), blockpos, false);
+        // Loom start :: fire BlockPlacedEvent and PlantFertilizedEvent
+        if (playerentity != null) {
+            if (item != Items.BONE_MEAL && org.loomdev.loom.event.LoomEventDispatcher.onEntityBlockPlace(itemusagecontext.getWorld(), blockpos, playerentity).isCancelled()) {
+                ((org.loomdev.loom.entity.player.PlayerImpl) playerentity.getLoomEntity()).updateInventory();
+                return ActionResult.FAIL;
+            } else if (item == Items.BONE_MEAL && org.loomdev.loom.event.LoomEventDispatcher.onPlantFertilize(itemusagecontext.getWorld(), blockpos, playerentity).isCancelled()) {
+                return ActionResult.FAIL;
+            }
+        }
+        // Loom end
 
         if (playerentity != null && !playerentity.method_31549().allowModifyWorld && !this.canPlaceOn(itemusagecontext.getWorld().getTagManager(), cachedblockposition)) {
             return ActionResult.PASS;
