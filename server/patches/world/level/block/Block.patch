--- a/net/minecraft//world/level/block/Block.java
+++ b/net/minecraft//world/level/block/Block.java
@@ -33,7 +33,6 @@
 import net.minecraft.world.entity.ExperienceOrb;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.item.ItemEntity;
-import net.minecraft.world.entity.monster.piglin.PiglinAi;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.BlockItem;
 import net.minecraft.world.item.CreativeModeTab;
@@ -73,9 +72,11 @@
             return !Shapes.joinIsNotEmpty(Shapes.block(), voxelshape, BooleanOp.NOT_SAME);
         }
 
+        /* // Loom start :: decompile error
         public Object load(Object object) throws Exception {
             return this.load((VoxelShape) object);
         }
+         */ // Loom end
     });
     public static final int UPDATE_NEIGHBORS = 1;
     public static final int UPDATE_CLIENTS = 2;
@@ -355,6 +356,11 @@
     private static void popResource(Level level, Supplier<ItemEntity> supplier, ItemStack itemstack) {
         if (!level.isClientSide && !itemstack.isEmpty() && level.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
             ItemEntity itementity = (ItemEntity) supplier.get();
+            // Loom start :: fire BlockEvent.DropItem
+            var event = org.loomdev.loom.event.LoomEventDispatcher.fire(new org.loomdev.loom.event.block.BlockEventImpl.DropItemImpl(level, itementity.getOnPos(), itemstack));
+            if (event.isCanceled()) return;
+            itementity.setItem(event.getMinecraftItemStack());
+            // Loom end
 
             itementity.setDefaultPickUpDelay();
             level.addFreshEntity(itementity);
@@ -363,7 +369,11 @@
 
     protected void popExperience(ServerLevel serverlevel, BlockPos blockpos, int i) {
         if (serverlevel.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
-            ExperienceOrb.award(serverlevel, Vec3.atCenterOf(blockpos), i);
+            // Loom start :: fire BlockEvent.DropExperience
+            var event = org.loomdev.loom.event.LoomEventDispatcher.fire(new org.loomdev.loom.event.block.BlockEventImpl.DropExperienceImpl(serverlevel, blockpos, i));
+            if (event.isCanceled()) return;
+            ExperienceOrb.award(serverlevel, Vec3.atCenterOf(blockpos), event.getExperience());
+            // Loom end
         }
 
     }
@@ -440,7 +450,7 @@
     public void playerWillDestroy(Level level, BlockPos blockpos, BlockState blockstate, Player player) {
         this.spawnDestroyParticles(level, player, blockpos, blockstate);
         if (blockstate.is((Tag) BlockTags.GUARDED_BY_PIGLINS)) {
-            PiglinAi.angerNearbyPiglins(player, false);
+            net.minecraft.world.entity.monster.piglin.PiglinAi.angerNearbyPiglins(player, false); // Loom :: decompile error
         }
 
         level.gameEvent(player, GameEvent.BLOCK_DESTROY, blockpos);
