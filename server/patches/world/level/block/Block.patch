--- a/net/minecraft//world/level/block/Block.java
+++ b/net/minecraft//world/level/block/Block.java
@@ -70,9 +70,7 @@
             return !Shapes.joinIsNotEmpty(Shapes.block(), voxelshape, BooleanOp.NOT_SAME);
         }
 
-        public Object load(Object object) throws Exception {
-            return this.load((VoxelShape) object);
-        }
+        // Loom :: decompile error
     });
     public static final int UPDATE_NEIGHBORS = 1;
     public static final int UPDATE_CLIENTS = 2;
@@ -326,7 +324,11 @@
             double d0 = (double) (level.random.nextFloat() * 0.5F) + 0.25D;
             double d1 = (double) (level.random.nextFloat() * 0.5F) + 0.25D;
             double d2 = (double) (level.random.nextFloat() * 0.5F) + 0.25D;
-            ItemEntity itementity = new ItemEntity(level, (double) blockpos.getX() + d0, (double) blockpos.getY() + d1, (double) blockpos.getZ() + d2, itemstack);
+            // Loom start :: fire BlockEvent.DropItem
+            var event = org.loomdev.loom.event.LoomEventDispatcher.fire(new org.loomdev.loom.event.block.BlockEventImpl.DropItemImpl(level, blockpos, itemstack));
+            if (event.isCanceled()) return;
+            ItemEntity itementity = new ItemEntity(level, (double) blockpos.getX() + d0, (double) blockpos.getY() + d1, (double) blockpos.getZ() + d2, event.getMinecraftItemStack());
+            // Loom end
 
             itementity.setDefaultPickUpDelay();
             level.addFreshEntity(itementity);
@@ -335,7 +337,11 @@
 
     protected void popExperience(ServerLevel serverlevel, BlockPos blockpos, int i) {
         if (serverlevel.getGameRules().getBoolean(GameRules.RULE_DOBLOCKDROPS)) {
-            ExperienceOrb.award(serverlevel, Vec3.atCenterOf(blockpos), i);
+            // Loom start :: fire BlockEvent.DropExperience
+            var event = org.loomdev.loom.event.LoomEventDispatcher.fire(new org.loomdev.loom.event.block.BlockEventImpl.DropExperienceImpl(serverlevel, blockpos, i));
+            if (event.isCanceled()) return;
+            ExperienceOrb.award(serverlevel, Vec3.atCenterOf(blockpos), event.getExperience());
+            // Loom end
         }
 
     }
