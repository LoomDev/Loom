--- a/net/minecraft//world/level/Level.java
+++ b/net/minecraft//world/level/Level.java
@@ -68,6 +68,15 @@
 
 public abstract class Level implements LevelAccessor, AutoCloseable {
 
+    // Loom start
+    private org.loomdev.loom.world.WorldImpl worldImpl;
+    public final org.loomdev.loom.world.WorldImpl getLoomWorld() {
+        if (worldImpl == null) {
+            worldImpl = new org.loomdev.loom.world.WorldImpl(this);
+        }
+        return worldImpl;
+    }
+    // Loom end
     protected static final Logger LOGGER = LogManager.getLogger();
     public static final Codec<ResourceKey<Level>> RESOURCE_KEY_CODEC = ResourceLocation.CODEC.xmap(ResourceKey.elementKey(Registry.DIMENSION_REGISTRY), ResourceKey::location);
     public static final ResourceKey<Level> OVERWORLD = ResourceKey.create(Registry.DIMENSION_REGISTRY, new ResourceLocation("overworld"));
@@ -574,7 +583,7 @@
 
                 for (int j = 0; j < i; ++j) {
                     EnderDragonPart enderdragonpart = aenderdragonpart[j];
-                    T t0 = (Entity) entitytypetest.tryCast(enderdragonpart);
+                    T t0 = entitytypetest.tryCast(enderdragonpart); // Loom :: decompile error
 
                     if (t0 != null && predicate.test(t0)) {
                         list.add(t0);
@@ -904,7 +913,9 @@
 
     }
 
+    /* // Loom start :: decompile error
     public ChunkAccess getChunk(int i, int j) {
         return this.getChunk(i, j);
     }
+     */ // Loom end
 }
