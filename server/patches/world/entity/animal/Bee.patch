--- a/net/minecraft//world/entity/animal/Bee.java
+++ b/net/minecraft//world/entity/animal/Bee.java
@@ -123,16 +123,16 @@
     private float rollAmountO;
     private int timeSinceSting;
     private int ticksWithoutNectarSinceExitingHive;
-    private int stayOutOfHiveCountdown;
+    public int stayOutOfHiveCountdown; // Loom :: private -> public (BeeImpl)
     private int numCropsGrownSincePollination;
     private static final int COOLDOWN_BEFORE_LOCATING_NEW_HIVE = 200;
     private int remainingCooldownBeforeLocatingNewHive;
     private static final int COOLDOWN_BEFORE_LOCATING_NEW_FLOWER = 200;
-    private int remainingCooldownBeforeLocatingNewFlower;
+    public int remainingCooldownBeforeLocatingNewFlower; // Loom :: private -> public (BeeImpl)
     @Nullable
     private BlockPos savedFlowerPos;
     @Nullable
-    private BlockPos hivePos;
+    public BlockPos hivePos; // Loom :: private -> public (BeeImpl)
     private Bee.BeePollinateGoal beePollinateGoal;
     private Bee.BeeGoToHiveGoal goToHiveGoal;
     private Bee.BeeGoToKnownFlowerGoal goToKnownFlowerGoal;
@@ -488,7 +488,7 @@
         return this.getFlag(8);
     }
 
-    private void setHasNectar(boolean flag) {
+    public void setHasNectar(boolean flag) { // Loom :: private -> public
         if (flag) {
             this.resetTicksWithoutNectarSinceExitingHive();
         }
@@ -500,7 +500,7 @@
         return this.getFlag(4);
     }
 
-    private void setHasStung(boolean flag) {
+    public void setHasStung(boolean flag) { // Loom :: private -> public
         this.setFlag(4, flag);
     }
 
@@ -633,9 +633,11 @@
         return blockpos.closerThan((Vec3i) this.blockPosition(), (double) i);
     }
 
+    /* // Loom start :: decompile error
     public AgeableMob getBreedOffspring(ServerLevel serverlevel, AgeableMob ageablemob) {
         return this.getBreedOffspring(serverlevel, ageablemob);
     }
+     */ // Loom end
 
     class BeeEnterHiveGoal extends Bee.BaseBeeGoal {
 
