--- a/net/minecraft/world/entity/animal/Bee.java
+++ b/net/minecraft/world/entity/animal/Bee.java
@@ -98,10 +98,10 @@
     private float rollAmountO;
     private int timeSinceSting;
     private int ticksWithoutNectarSinceExitingHive;
-    private int stayOutOfHiveCountdown;
+    public int stayOutOfHiveCountdown; // Loom :: private -> public
     private int numCropsGrownSincePollination;
     private int remainingCooldownBeforeLocatingNewHive;
-    private int remainingCooldownBeforeLocatingNewFlower;
+    public int remainingCooldownBeforeLocatingNewFlower; // Loom :: private -> public
     @Nullable
     private BlockPos savedFlowerPos;
     @Nullable
@@ -440,7 +440,7 @@
         return this.getFlag(8);
     }
 
-    private void setHasNectar(boolean flag) {
+    public void setHasNectar(boolean flag) { // Loom :: private -> public
         if (flag) {
             this.resetTicksWithoutNectarSinceExitingHive();
         }
@@ -452,7 +452,7 @@
         return this.getFlag(4);
     }
 
-    private void setHasStung(boolean flag) {
+    public void setHasStung(boolean flag) { // Loom :: private -> public
         this.setFlag(4, flag);
     }
 
@@ -544,7 +544,7 @@
 
     protected void checkFallDamage(double d0, boolean flag, BlockState blockstate, BlockPos blockpos) {}
 
-    protected boolean makeFlySound() {
+    public boolean makeFlySound() { // Loom :: private -> public
         return true;
     }
 
@@ -579,9 +579,11 @@
         return blockpos.closerThan((Vec3i) this.blockPosition(), (double) i);
     }
 
+    /* // Loom start :: decompile error
     public AgeableMob getBreedOffspring(ServerLevel serverlevel, AgeableMob ageablemob) {
         return this.getBreedOffspring(serverlevel, ageablemob);
     }
+     */ // Loom end
 
     class BeeEnterHiveGoal extends Bee.BaseBeeGoal {
 
