--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -114,6 +114,16 @@
 
 public abstract class LivingEntity extends Entity {
 
+    // Loom start
+    public java.util.OptionalInt maxAirSupplyOverride = java.util.OptionalInt.empty();
+    public java.util.Optional<Boolean> sensitiveToWaterOverride = java.util.Optional.empty();
+
+    @Override
+    public int getMaxAirSupply() {
+        if (maxAirSupplyOverride == null) return super.getMaxAirSupply();
+        return maxAirSupplyOverride.orElse(super.getMaxAirSupply());
+    }
+    // Loom end
     private static final UUID SPEED_MODIFIER_SPRINTING_UUID = UUID.fromString("662A6B8D-DA3E-4C1C-8813-96EA6097278D");
     private static final UUID SPEED_MODIFIER_SOUL_SPEED_UUID = UUID.fromString("87f46a96-686f-4796-b035-22e16ee9e038");
     private static final UUID SPEED_MODIFIER_POWDER_SNOW_UUID = UUID.fromString("1eaf83ff-7207-4596-b37a-d7a07b3ec4ce");
@@ -195,10 +205,11 @@
     @Nullable
     private DamageSource lastDamageSource;
     private long lastDamageStamp;
-    protected int autoSpinAttackTicks;
+    public int autoSpinAttackTicks; // Loom :: protected -> public (LivingEntityImpl)
     private float swimAmount;
     private float swimAmountO;
     protected Brain<?> brain;
+    public boolean pickUpLoot; // Loom :: moved from MobEntity (LivingEntityImpl)
 
     protected LivingEntity(EntityType<? extends LivingEntity> entitytype, Level level) {
         super(entitytype, level);
@@ -1600,7 +1611,7 @@
 
     }
 
-    protected void outOfWorld() {
+    public void outOfWorld() { // Loom :: protected -> public
         this.hurt(DamageSource.OUT_OF_WORLD, 4.0F);
     }
 
@@ -2405,7 +2416,7 @@
     }
 
     public boolean isSensitiveToWater() {
-        return false;
+        return sensitiveToWaterOverride.orElse(false); // Loom
     }
 
     private void updateFallFlying() {
@@ -2669,7 +2680,7 @@
 
     }
 
-    protected void setLivingEntityFlag(int i, boolean flag) {
+    public void setLivingEntityFlag(int i, boolean flag) { // Loom :: protected -> public
         byte b0 = (Byte) this.entityData.get(LivingEntity.DATA_LIVING_ENTITY_FLAGS);
         int j;
 
@@ -2951,7 +2962,7 @@
     }
 
     public void stopSleeping() {
-        Optional optional = this.getSleepingPos();
+        Optional<BlockPos> optional = this.getSleepingPos(); // Loom :: decompile error
         Level level = this.level;
 
         this.level.getClass();
