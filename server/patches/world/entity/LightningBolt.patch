--- a/net/minecraft//world/entity/LightningBolt.java
+++ b/net/minecraft//world/entity/LightningBolt.java
@@ -33,9 +33,9 @@
     private int life;
     public long seed;
     private int flashes;
-    private boolean visualOnly;
+    public boolean visualOnly; // Loom :: private -> public (LightningBoltEntity)
     @Nullable
-    private ServerPlayer cause;
+    public ServerPlayer cause; // Loom :: private -> public (LightningBoltEntity)
 
     public LightningBolt(EntityType<? extends LightningBolt> entitytype, Level level) {
         super(entitytype, level);
@@ -131,6 +131,7 @@
             BlockState blockstate = BaseFireBlock.getState(this.level, blockpos);
 
             if (this.level.getBlockState(blockpos).isAir() && blockstate.canSurvive(this.level, blockpos)) {
+                // TODO if (!org.loomdev.loom.event.LoomEventDispatcher.onBlockIgnite(level, blockpos, this, org.loomdev.api.event.block.BlockIgniteEvent.Cause.LIGHTNING).isCancelled()) // Loom :: fire BlockIgniteEvent
                 this.level.setBlockAndUpdate(blockpos, blockstate);
             }
 
@@ -139,6 +140,7 @@
 
                 blockstate = BaseFireBlock.getState(this.level, blockpos1);
                 if (this.level.getBlockState(blockpos1).isAir() && blockstate.canSurvive(this.level, blockpos1)) {
+                    // TODO if (!org.loomdev.loom.event.LoomEventDispatcher.onBlockIgnite(level, blockpos1, this, org.loomdev.api.event.block.BlockIgniteEvent.Cause.LIGHTNING).isCancelled()) // Loom :: fire BlockIgniteEvent
                     this.level.setBlockAndUpdate(blockpos1, blockstate);
                 }
             }
@@ -203,8 +205,9 @@
             blockstate = level.getBlockState(blockpos1);
         } while (!(blockstate.getBlock() instanceof WeatheringCopper));
 
+        final BlockPos finalPos = blockpos1; // Loom - decompile error
         WeatheringCopper.getPrevious(blockstate).ifPresent((blockstate1) -> {
-            level.setBlockAndUpdate(blockpos1, blockstate1);
+            level.setBlockAndUpdate(finalPos, blockstate1); // Loom - decompile error
         });
         level.levelEvent(3002, blockpos1, -1);
         return Optional.of(blockpos1);
