--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -65,7 +65,7 @@
     private static final AttributeModifier SPEED_MODIFIER_ATTACKING = new AttributeModifier(EnderMan.SPEED_MODIFIER_ATTACKING_UUID, "Attacking speed boost", 0.15000000596046448D, AttributeModifier.Operation.ADDITION);
     private static final EntityDataAccessor<Optional<BlockState>> DATA_CARRY_STATE = SynchedEntityData.defineId(EnderMan.class, EntityDataSerializers.BLOCK_STATE);
     private static final EntityDataAccessor<Boolean> DATA_CREEPY = SynchedEntityData.defineId(EnderMan.class, EntityDataSerializers.BOOLEAN);
-    private static final EntityDataAccessor<Boolean> DATA_STARED_AT = SynchedEntityData.defineId(EnderMan.class, EntityDataSerializers.BOOLEAN);
+    public static final EntityDataAccessor<Boolean> DATA_STARED_AT = SynchedEntityData.defineId(EnderMan.class, EntityDataSerializers.BOOLEAN); // Loom :: private -> public (EndermanImpl)
     private int lastStareSound = Integer.MIN_VALUE;
     private int targetChangeTime;
     private static final IntRange PERSISTENT_ANGER_TIME = TimeUtil.rangeOfSeconds(20, 39);
@@ -224,7 +224,7 @@
     }
 
     public boolean isSensitiveToWater() {
-        return true;
+        return sensitiveToWaterOverride.orElse(true); // Loom
     }
 
     protected void customServerAiStep() {
@@ -384,6 +384,7 @@
             boolean flag = blockhitresult.getBlockPos().equals(blockpos);
 
             if (blockstate.is((Tag) BlockTags.ENDERMAN_HOLDABLE) && flag) {
+                if (org.loomdev.loom.event.LoomEventDispatcher.onBlockBreak(enderman, level, blockpos).isCanceled()) return; // Loom :: fire BlockEvent.Break
                 level.removeBlock(blockpos, false);
                 this.enderman.setCarriedBlock(blockstate.getBlock().defaultBlockState());
             }
@@ -418,7 +419,11 @@
             if (blockstate2 != null) {
                 blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level, blockpos);
                 if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
-                    level.setBlock(blockpos, blockstate2, 3);
+                    // Loom start :: fire BlockEvent.Place
+                    var event = org.loomdev.loom.event.LoomEventDispatcher.onBlockPlace(enderman, level, blockpos, blockstate2);
+                    if (event.isCanceled()) return;
+                    level.setBlock(blockpos, ((org.loomdev.loom.block.BlockStateImpl) event.getNewState()).getMinecraftState(), 3);
+                    // Loom end
                     this.enderman.setCarriedBlock((BlockState) null);
                 }
 
