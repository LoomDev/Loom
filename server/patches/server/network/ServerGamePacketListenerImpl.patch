--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -321,7 +321,7 @@
         TextFilter textfilter = this.player.getTextFilter();
 
         if (textfilter != null) {
-            ((CompletableFuture) bifunction.apply(textfilter, t0)).thenAcceptAsync((optional) -> {
+            (bifunction.apply(textfilter, t0)).thenAcceptAsync((optional) -> { // Loom :: decompile error
                 optional.ifPresent(consumer1);
             }, blockableeventloop);
         } else {
@@ -447,7 +447,7 @@
 
     public void handleRecipeBookSeenRecipePacket(ServerboundRecipeBookSeenRecipePacket serverboundrecipebookseenrecipepacket) {
         PacketUtils.ensureRunningOnSameThread(serverboundrecipebookseenrecipepacket, this, this.player.getLevel());
-        Optional optional = this.server.getRecipeManager().byKey(serverboundrecipebookseenrecipepacket.getRecipe());
+        Optional<? extends net.minecraft.world.item.crafting.Recipe<?>> optional = this.server.getRecipeManager().byKey(serverboundrecipebookseenrecipepacket.getRecipe());
         ServerRecipeBook serverrecipebook = this.player.getRecipeBook();
 
         optional.ifPresent(serverrecipebook::removeHighlight);
@@ -730,8 +730,8 @@
 
                 int i;
 
-                for (i = 0; i < listtag.size(); ++i) {
-                    list.add(listtag.getString(i));
+                for (int j = 0; j < listtag.size(); ++j) { // Loom :: decompile error
+                    list.add(listtag.getString(j)); // Loom :: decompile error
                 }
 
                 i = serverboundeditbookpacket.getSlot();
@@ -1102,7 +1102,13 @@
     public void onDisconnect(Component component) {
         ServerGamePacketListenerImpl.LOGGER.info("{} lost connection: {}", this.player.getName().getString(), component.getString());
         this.server.invalidateStatus();
-        this.server.getPlayerList().broadcastMessage((new TranslatableComponent("multiplayer.player.left", new Object[]{this.player.getDisplayName()})).withStyle(ChatFormatting.YELLOW), ChatType.SYSTEM, Util.NIL_UUID);
+        // Loom start :: fire ConnectionEvent.Disconnect
+        var message = (new TranslatableComponent("multiplayer.player.left", new Object[]{this.player.getDisplayName()})).withStyle(ChatFormatting.YELLOW);
+        var event = org.loomdev.loom.event.LoomEventDispatcher.fire(new org.loomdev.loom.event.entity.PlayerEventImpl.DisconnectImpl(player, message));
+        if (event.getDisconnectMessage().toString().length() != 0) {
+            this.server.getPlayerList().broadcastMessage(org.loomdev.loom.util.transformer.TextTransformer.toMinecraft(event.getDisconnectMessage()), ChatType.SYSTEM, Util.NIL_UUID);
+        }
+        // Loom end
         this.player.disconnect();
         this.server.getPlayerList().remove(this.player);
         TextFilter textfilter = this.player.getTextFilter();
@@ -1191,9 +1197,15 @@
             if (s.startsWith("/")) {
                 this.handleCommand(s);
             } else {
-                TranslatableComponent translatablecomponent = new TranslatableComponent("chat.type.text", new Object[]{this.player.getDisplayName(), s});
+                // Loom start :: fire PlayerEvent.Chat
+                // TranslatableComponent translatablecomponent = new TranslatableComponent("chat.type.text", new Object[]{this.player.getDisplayName(), s});
 
-                this.server.getPlayerList().broadcastMessage(translatablecomponent, ChatType.CHAT, this.player.getUUID());
+                org.loomdev.loom.event.LoomEventDispatcher.fireAsync(new org.loomdev.loom.event.entity.PlayerEventImpl.ChatImpl(player, net.kyori.adventure.text.Component.text(s))).thenAccept(event -> {
+                    if (event.isCanceled() || event.getMessage().toString().length() == 0) return;
+                    var message = org.loomdev.loom.util.transformer.TextTransformer.toMinecraft(event.getFormat().apply(player.getLoomEntity().getDisplayName(), event.getMessage()));
+                    this.server.getPlayerList().broadcastMessage(message, ChatType.CHAT, this.player.getUUID());
+                });
+                // Loom end
             }
 
             this.chatSpamTickCount += 20;
