--- a/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -432,7 +432,7 @@
 
     public void handleRecipeBookSeenRecipePacket(ServerboundRecipeBookSeenRecipePacket serverboundrecipebookseenrecipepacket) {
         PacketUtils.ensureRunningOnSameThread(serverboundrecipebookseenrecipepacket, this, this.player.getLevel());
-        Optional optional = this.server.getRecipeManager().byKey(serverboundrecipebookseenrecipepacket.getRecipe());
+        Optional<? extends net.minecraft.world.item.crafting.Recipe<?>> optional = this.server.getRecipeManager().byKey(serverboundrecipebookseenrecipepacket.getRecipe());
         ServerRecipeBook serverrecipebook = this.player.getRecipeBook();
 
         optional.ifPresent(serverrecipebook::removeHighlight);
@@ -1119,7 +1119,13 @@
     public void onDisconnect(Component component) {
         ServerGamePacketListenerImpl.LOGGER.info("{} lost connection: {}", this.player.getName().getString(), component.getString());
         this.server.invalidateStatus();
-        this.server.getPlayerList().broadcastMessage((new TranslatableComponent("multiplayer.player.left", new Object[]{this.player.getDisplayName()})).withStyle(ChatFormatting.YELLOW), ChatType.SYSTEM, Util.NIL_UUID);
+        // Loom start :: fire ConnectionEvent.Disconnect
+        var message = (new TranslatableComponent("multiplayer.player.left", new Object[]{this.player.getDisplayName()})).withStyle(ChatFormatting.YELLOW);
+        var event = org.loomdev.loom.event.LoomEventDispatcher.fire(new org.loomdev.loom.event.entity.PlayerEventImpl.DisconnectImpl(player, message));
+        if (event.getDisconnectMessage().toString().length() != 0) {
+            this.server.getPlayerList().broadcastMessage(org.loomdev.loom.util.transformer.TextTransformer.toMinecraft(event.getDisconnectMessage()), ChatType.SYSTEM, Util.NIL_UUID);
+        }
+        // Loom end
         this.player.disconnect();
         this.server.getPlayerList().remove(this.player);
         this.player.getTextFilter().leave();
@@ -1195,9 +1201,17 @@
                 TranslatableComponent translatablecomponent = s1.isEmpty() ? null : new TranslatableComponent("chat.type.text", new Object[]{this.player.getDisplayName(), s1});
                 TranslatableComponent translatablecomponent1 = new TranslatableComponent("chat.type.text", new Object[]{this.player.getDisplayName(), s});
 
+                // Loom start :: fire PlayerEvent.Chat
+                org.loomdev.loom.event.LoomEventDispatcher.fireAsync(new org.loomdev.loom.event.entity.PlayerEventImpl.ChatImpl(player, net.kyori.adventure.text.Component.text(s))).thenAccept(event -> {
+                    if (event.isCanceled() || event.getMessage().toString().length() == 0) return;
+                    this.server.getPlayerList().broadcastMessage(event.getMinecraftComponent(), ChatType.CHAT, this.player.getUUID()); // TODO implement filtering
+                });
+                /*
                 this.server.getPlayerList().broadcastMessage(translatablecomponent1, (serverplayer) -> {
                     return this.player.shouldFilterMessageTo(serverplayer) ? translatablecomponent : translatablecomponent1;
                 }, ChatType.CHAT, this.player.getUUID());
+                 */
+                // Loom end
             }
 
             this.chatSpamTickCount += 20;
