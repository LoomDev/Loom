--- a/net/minecraft/server/network/ServerPlayNetworkHandler.java
+++ b/net/minecraft/server/network/ServerPlayNetworkHandler.java
@@ -20,6 +20,8 @@
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+
+import net.kyori.adventure.text.TextComponent;
 import net.minecraft.SharedConstants;
 import net.minecraft.advancement.Advancement;
 import net.minecraft.advancement.criterion.Criteria;
@@ -320,7 +322,7 @@
         class_5513 class_5513 = this.player.method_31273();
 
         if (class_5513 != null) {
-            ((CompletableFuture) bifunction.apply(class_5513, t0)).thenAcceptAsync((optional) -> {
+            (bifunction.apply(class_5513, t0)).thenAcceptAsync((optional) -> {
                 optional.ifPresent(consumer1);
             }, threadexecutor);
         } else {
@@ -446,7 +448,7 @@
 
     public void onRecipeBookData(RecipeBookDataC2SPacket recipebookdatac2spacket) {
         NetworkThreadUtils.forceMainThread(recipebookdatac2spacket, this, this.player.getServerWorld());
-        Optional optional = this.server.getRecipeManager().get(recipebookdatac2spacket.getRecipeId());
+        Optional<? extends net.minecraft.recipe.Recipe<?>> optional = this.server.getRecipeManager().get(recipebookdatac2spacket.getRecipeId()); // Loom :: decompile error
         ServerRecipeBook serverrecipebook = this.player.getRecipeBook();
 
         optional.ifPresent(serverrecipebook::onRecipeDisplayed);
@@ -731,10 +733,11 @@
 
                 i = bookupdatec2spacket.getSlot();
                 if (PlayerInventory.isValidHotbarIndex(i) || i == 40) {
+                    int finalI = i;
                     this.method_31279(list, flag ? (list1) -> {
-                        this.method_31276((String) list1.get(0), list1.subList(1, list1.size()), i);
+                        this.method_31276((String) list1.get(0), list1.subList(1, list1.size()), finalI);
                     } : (list1) -> {
-                        this.method_31278(list1, i);
+                        this.method_31278(list1, finalI);
                     });
                 }
             }
@@ -1088,7 +1091,11 @@
     public void onDisconnected(Text text) {
         ServerPlayNetworkHandler.LOGGER.info("{} lost connection: {}", this.player.getName().getString(), text.getString());
         this.server.forcePlayerSampleUpdate();
-        this.server.getPlayerManager().broadcastChatMessage((new TranslatableText("multiplayer.player.left", new Object[]{this.player.getDisplayName()})).formatted(Formatting.YELLOW), MessageType.SYSTEM, Util.NIL_UUID);
+        // Loom start :: fire PlayerDisconnectedEvent
+        org.loomdev.loom.event.LoomEventDispatcher.onPlayerDisconnected(player, (new TranslatableText("multiplayer.player.left", new Object[]{this.player.getDisplayName()})).formatted(Formatting.YELLOW)).thenAccept(event -> {
+            this.server.getPlayerManager().broadcastChatMessage(org.loomdev.loom.util.transformer.TextTransformer.toMinecraft(event.getMessage().orElse(net.kyori.adventure.text.TextComponent.empty())), MessageType.SYSTEM, Util.NIL_UUID);
+        });
+        // Loom end
         this.player.onDisconnect();
         this.server.getPlayerManager().remove(this.player);
         class_5513 class_5513 = this.player.method_31273();
@@ -1177,9 +1184,17 @@
             if (s.startsWith("/")) {
                 this.executeCommand(s);
             } else {
-                TranslatableText translatabletext = new TranslatableText("chat.type.text", new Object[]{this.player.getDisplayName(), s});
-
-                this.server.getPlayerManager().broadcastChatMessage(translatabletext, MessageType.CHAT, this.player.getUuid());
+                // Loom start :: fire PlayerMessageSentEvent and apply formatting
+                org.loomdev.loom.event.LoomEventDispatcher.onPlayerMessageSent(this.player, s).thenAccept(event -> {
+                    net.kyori.adventure.text.TextComponent message = net.kyori.adventure.text.TextComponent.builder()
+                            .append(event.getPrefix().orElse(net.kyori.adventure.text.TextComponent.empty()))
+                            .append(event.getMessage().orElse(TextComponent.empty()))
+                            .append(event.getSuffix().orElse(net.kyori.adventure.text.TextComponent.empty()))
+                            .build();
+
+                    if (event.getMessage().isPresent()) event.getRecipients().forEach(recipient -> recipient.sendMessage(message));
+                });
+                // Loom end
             }
 
             this.messageCooldown += 20;
@@ -1469,9 +1484,13 @@
                 return;
             }
 
+            // Loom start :: fire SignWrittenEvent
+            if (!org.loomdev.loom.event.LoomEventDispatcher.onSignWritten(serverworld, blockpos, this.player, list).isCancelled()) {
             for (int i = 0; i < list.size(); ++i) {
                 signblockentity.setTextOnRow(i, new LiteralText((String) list.get(i)));
             }
+            }
+            // Loom end
 
             signblockentity.markDirty();
             serverworld.updateListeners(blockpos, blockstate, blockstate, 3);
