--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -135,6 +135,7 @@
 
 public class ServerPlayer extends Player implements ContainerListener {
 
+    public java.util.OptionalInt viewDistance = java.util.OptionalInt.empty(); // Loom
     private static final Logger LOGGER = LogManager.getLogger();
     public ServerGamePacketListenerImpl connection;
     public final MinecraftServer server;
@@ -314,7 +315,7 @@
             compoundtag.putInt("SpawnZ", this.respawnPosition.getZ());
             compoundtag.putBoolean("SpawnForced", this.respawnForced);
             compoundtag.putFloat("SpawnAngle", this.respawnAngle);
-            DataResult dataresult = ResourceLocation.CODEC.encodeStart(NbtOps.INSTANCE, this.respawnDimension.location());
+            DataResult<net.minecraft.nbt.Tag> dataresult = ResourceLocation.CODEC.encodeStart(NbtOps.INSTANCE, this.respawnDimension.location()); // Loom :: decompile error
             Logger logger = ServerPlayer.LOGGER;
 
             logger.getClass();
@@ -1254,6 +1255,7 @@
         this.canChatColor = serverboundclientinformationpacket.getChatColors();
         this.getEntityData().set(ServerPlayer.DATA_PLAYER_MODE_CUSTOMISATION, (byte) serverboundclientinformationpacket.getModelCustomisation());
         this.getEntityData().set(ServerPlayer.DATA_PLAYER_MAIN_HAND, (byte) (serverboundclientinformationpacket.getMainHand() == HumanoidArm.LEFT ? 0 : 1));
+        this.viewDistance = java.util.OptionalInt.of(serverboundclientinformationpacket.viewDistance); // Loom
     }
 
     public ChatVisiblity getChatVisibility() {
@@ -1290,7 +1292,7 @@
     }
 
     public void cancelRemoveEntity(Entity entity) {
-        this.entitiesToRemove.remove(entity.getId());
+        this.entitiesToRemove.remove(Integer.valueOf(entity.getId())); // Loom :: decompile error
     }
 
     protected void updateInvisibilityStatus() {
