--- a/net/minecraft//server/level/ServerPlayer.java
+++ b/net/minecraft//server/level/ServerPlayer.java
@@ -140,6 +140,7 @@
 
 public class ServerPlayer extends Player {
 
+    public java.util.OptionalInt viewDistance = java.util.OptionalInt.empty(); // Loom
     private static final Logger LOGGER = LogManager.getLogger();
     private static final int NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ = 32;
     private static final int NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y = 10;
@@ -361,7 +362,7 @@
             compoundtag.putInt("SpawnZ", this.respawnPosition.getZ());
             compoundtag.putBoolean("SpawnForced", this.respawnForced);
             compoundtag.putFloat("SpawnAngle", this.respawnAngle);
-            DataResult dataresult = ResourceLocation.CODEC.encodeStart(NbtOps.INSTANCE, this.respawnDimension.location());
+            DataResult<net.minecraft.nbt.Tag> dataresult = ResourceLocation.CODEC.encodeStart(NbtOps.INSTANCE, this.respawnDimension.location()); // Loom :: decompile error
             Logger logger = ServerPlayer.LOGGER;
 
             Objects.requireNonNull(logger);
@@ -1079,7 +1080,7 @@
 
         for (int j = 0; j < i; ++j) {
             ResourceLocation resourcelocation = aresourcelocation1[j];
-            Optional optional = this.server.getRecipeManager().byKey(resourcelocation);
+            Optional<? extends Recipe<?>> optional = this.server.getRecipeManager().byKey(resourcelocation); // Loom :: decompile error
 
             Objects.requireNonNull(list);
             optional.ifPresent(list::add);
@@ -1285,6 +1286,7 @@
         this.textFilteringEnabled = serverboundclientinformationpacket.isTextFilteringEnabled();
         this.getEntityData().set(ServerPlayer.DATA_PLAYER_MODE_CUSTOMISATION, (byte) serverboundclientinformationpacket.getModelCustomisation());
         this.getEntityData().set(ServerPlayer.DATA_PLAYER_MAIN_HAND, (byte) (serverboundclientinformationpacket.getMainHand() == HumanoidArm.LEFT ? 0 : 1));
+        this.viewDistance = java.util.OptionalInt.of(serverboundclientinformationpacket.viewDistance); // Loom
     }
 
     public boolean canChatInColor() {
@@ -1374,7 +1376,7 @@
 
     @Nullable
     public Component getTabListDisplayName() {
-        return null;
+        return ((org.loomdev.api.entity.player.Player) getLoomEntity()).getTabListName().map(org.loomdev.loom.util.transformer.TextTransformer::toMinecraft).orElse(null);
     }
 
     public void swing(InteractionHand interactionhand) {
