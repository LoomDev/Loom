--- a/net/minecraft/network/protocol/status/ServerStatus.java
+++ b/net/minecraft/network/protocol/status/ServerStatus.java
@@ -14,7 +14,7 @@
 import net.minecraft.network.chat.Component;
 import net.minecraft.util.GsonHelper;
 
-public class ServerStatus {
+public class ServerStatus implements Cloneable { // Loom
 
     private Component description;
     private ServerStatus.Players players;
@@ -104,6 +104,7 @@
             return jsonobject;
         }
 
+        /* // Loom start :: decompile error
         public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
             return this.serialize((ServerStatus) object, type, jsonserializationcontext);
         }
@@ -111,12 +112,13 @@
         public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
             return this.deserialize(jsonelement, type, jsondeserializationcontext);
         }
+         */ // Loom end
     }
 
     public static class Version {
 
-        private final String name;
-        private final int protocol;
+        public String name; // Loom :: private -> public, non-final (StatusPingEventImpl)
+        public int protocol; // Loom :: private -> public, non-final (StatusPingEventImpl)
 
         public Version(String s, int i) {
             this.name = s;
@@ -149,6 +151,7 @@
                 return jsonobject;
             }
 
+            /* // Loom start :: decompile error
             public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
                 return this.serialize((ServerStatus.Version) object, type, jsonserializationcontext);
             }
@@ -156,13 +159,14 @@
             public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
                 return this.deserialize(jsonelement, type, jsondeserializationcontext);
             }
+             */ // Loom end
         }
     }
 
     public static class Players {
 
-        private final int maxPlayers;
-        private final int numPlayers;
+        public int maxPlayers; // Loom :: private -> public, non-final (StatusPingEventImpl)
+        public int numPlayers; // Loom :: private -> public, non-final (StatusPingEventImpl)
         private GameProfile[] sample;
 
         public Players(int i, int j) {
@@ -237,6 +241,7 @@
                 return jsonobject;
             }
 
+            /* // Loom start :: decompile error
             public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
                 return this.serialize((ServerStatus.Players) object, type, jsonserializationcontext);
             }
@@ -244,6 +249,14 @@
             public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
                 return this.deserialize(jsonelement, type, jsondeserializationcontext);
             }
+             */ // Loom end
         }
     }
+
+    // Loom start
+    @Override
+    public Object clone() throws CloneNotSupportedException {
+        return super.clone();
+    }
+    // Loom end
 }
