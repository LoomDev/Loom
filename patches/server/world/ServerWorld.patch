--- a/net/minecraft/server/world/ServerWorld.java
+++ b/net/minecraft/server/world/ServerWorld.java
@@ -151,7 +151,7 @@
     private final ServerChunkManager serverChunkManager;
     boolean inEntityTick;
     private final MinecraftServer server;
-    private final ServerWorldProperties worldProperties;
+    public final ServerWorldProperties worldProperties; // Loom :: public access
     public boolean savingDisabled;
     private boolean allPlayersSleeping;
     private int idleTimeout;
@@ -167,9 +167,11 @@
     private final EnderDragonFight enderDragonFight;
     private final StructureAccessor structureAccessor;
     private final boolean field_25143;
+    public final LevelStorage.Session levelstorage_session; // Loom :: expose level storage session
 
     public ServerWorld(MinecraftServer minecraftserver, Executor executor, LevelStorage.Session levelstorage_session, ServerWorldProperties serverworldproperties, RegistryKey<World> registrykey, DimensionType dimensiontype, WorldGenerationProgressListener worldgenerationprogresslistener, ChunkGenerator chunkgenerator, boolean flag, long i, List<Spawner> list, boolean flag1) {
         super(serverworldproperties, registrykey, dimensiontype, minecraftserver::getProfiler, false, flag, i);
+        this.levelstorage_session = levelstorage_session; // Loom :: expose level storage session
         this.blockTickScheduler = new ServerTickScheduler<>(this, (block) -> {
             return block == null || block.getDefaultState().isAir();
         }, Registry.BLOCK::getId, this::tickBlock);
@@ -203,6 +205,7 @@
             this.enderDragonFight = null;
         }
 
+        ((org.loomdev.loom.server.ServerImpl) org.loomdev.api.Loom.getServer()).registerWorld(this);
     }
 
     public void setWeather(int i, int j, boolean flag, boolean flag1) {
@@ -419,7 +422,7 @@
         if (this.field_25143) {
             long i = this.properties.getTime() + 1L;
 
-            this.worldProperties.setTime(i);
+            this.worldProperties.method_29034(i);
             this.worldProperties.getScheduledEvents().processEvents(this.server, i);
             if (this.properties.getGameRules().getBoolean(GameRules.DO_DAYLIGHT_CYCLE)) {
                 this.setTimeOfDay(this.properties.getTimeOfDay() + 1L);
@@ -429,7 +432,7 @@
     }
 
     public void setTimeOfDay(long i) {
-        this.worldProperties.setTimeOfDay(i);
+        this.worldProperties.method_29035(i);
     }
 
     public void method_29202(boolean flag, boolean flag1) {
@@ -445,7 +448,7 @@
 
     private void wakeSleepingPlayers() {
         ((List) this.players.stream().filter(LivingEntity::isSleeping).collect(Collectors.toList())).forEach((serverplayerentity) -> {
-            serverplayerentity.wakeUp(false, false);
+            ((ServerPlayerEntity) serverplayerentity).wakeUp(false, false); // Loom :: decompile error
         });
     }
 
@@ -1581,19 +1584,5 @@
         });
     }
 
-    public Scoreboard getScoreboard() {
-        return this.getScoreboard();
-    }
-
-    public ChunkManager getChunkManager() {
-        return this.getChunkManager();
-    }
-
-    public TickScheduler getFluidTickScheduler() {
-        return this.getFluidTickScheduler();
-    }
-
-    public TickScheduler getBlockTickScheduler() {
-        return this.getBlockTickScheduler();
-    }
+    // Loom :: decompile error
 }
