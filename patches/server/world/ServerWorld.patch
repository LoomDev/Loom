--- a/net/minecraft/server/world/ServerWorld.java
+++ b/net/minecraft/server/world/ServerWorld.java
@@ -149,7 +149,7 @@
     private final ServerChunkManager serverChunkManager;
     boolean inEntityTick;
     private final MinecraftServer server;
-    private final ServerWorldProperties field_24456;
+    public final ServerWorldProperties field_24456; // Loom :: public access
     public boolean savingDisabled;
     private boolean allPlayersSleeping;
     private int idleTimeout;
@@ -166,8 +166,11 @@
     private final StructureAccessor structureAccessor;
     private final boolean field_25143;
 
+    public final LevelStorage.Session levelstorage_session; // Loom :: expose level storage session
+
     public ServerWorld(MinecraftServer minecraftserver, Executor executor, LevelStorage.Session levelstorage_session, ServerWorldProperties serverworldproperties, RegistryKey<World> registrykey, RegistryKey<DimensionType> registrykey1, DimensionType dimensiontype, WorldGenerationProgressListener worldgenerationprogresslistener, ChunkGenerator chunkgenerator, boolean flag, long i, List<Spawner> list, boolean flag1) {
         super(serverworldproperties, registrykey, registrykey1, dimensiontype, minecraftserver::getProfiler, false, flag, i);
+        this.levelstorage_session = levelstorage_session;
         this.blockTickScheduler = new ServerTickScheduler<>(this, (block) -> {
             return block == null || block.getDefaultState().isAir();
         }, Registry.BLOCK::getId, this::tickBlock);
@@ -201,6 +204,7 @@
             this.enderDragonFight = null;
         }
 
+        ((org.loomdev.loom.server.ServerImpl) org.loomdev.api.Loom.getServer()).registerWorld(this);
     }
 
     public void method_27910(int i, int j, boolean flag, boolean flag1) {
@@ -443,7 +447,7 @@
 
     private void wakeSleepingPlayers() {
         ((List) this.players.stream().filter(LivingEntity::isSleeping).collect(Collectors.toList())).forEach((serverplayerentity) -> {
-            serverplayerentity.wakeUp(false, false);
+            ((ServerPlayerEntity) serverplayerentity).wakeUp(false, false); // Loom :: decompile error
         });
     }
 
@@ -1528,19 +1532,5 @@
         });
     }
 
-    public Scoreboard getScoreboard() {
-        return this.getScoreboard();
-    }
-
-    public ChunkManager getChunkManager() {
-        return this.getChunkManager();
-    }
-
-    public TickScheduler getFluidTickScheduler() {
-        return this.getFluidTickScheduler();
-    }
-
-    public TickScheduler getBlockTickScheduler() {
-        return this.getBlockTickScheduler();
-    }
+    // Loom :: decompile error
 }
