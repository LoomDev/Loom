--- a/net/minecraft/entity/passive/OcelotEntity.java
+++ b/net/minecraft/entity/passive/OcelotEntity.java
@@ -51,7 +51,7 @@
 public class OcelotEntity extends AnimalEntity {
 
     private static final Ingredient TAMING_INGREDIENT = Ingredient.ofItems(Items.COD, Items.SALMON);
-    private static final TrackedData<Boolean> TRUSTING = DataTracker.registerData(OcelotEntity.class, TrackedDataHandlerRegistry.BOOLEAN);
+    public static final TrackedData<Boolean> TRUSTING = DataTracker.registerData(OcelotEntity.class, TrackedDataHandlerRegistry.BOOLEAN); // Loom :: public accessor
     private OcelotEntity.FleeGoal<PlayerEntity> fleeGoal;
     private OcelotEntity.OcelotTemptGoal temptGoal;
 
@@ -64,7 +64,7 @@
         return (Boolean) this.dataTracker.get(OcelotEntity.TRUSTING);
     }
 
-    private void setTrusting(boolean flag) {
+    public void setTrusting(boolean flag) { // Loom :: public accessor
         this.dataTracker.set(OcelotEntity.TRUSTING, flag);
         this.updateFleeing();
     }
@@ -249,9 +249,7 @@
         return super.initialize(serverworldaccess, localdifficulty, spawnreason, (EntityData) entitydata, compoundtag);
     }
 
-    public PassiveEntity createChild(ServerWorld serverworld, PassiveEntity passiveentity) {
-        return this.createChild(serverworld, passiveentity);
-    }
+    // Loom :: decompile error
 
     static class OcelotTemptGoal extends TemptGoal {
 
@@ -272,9 +270,7 @@
         private final OcelotEntity ocelot;
 
         public FleeGoal(OcelotEntity ocelotentity, Class<T> oclass, float f, double d0, double d1) {
-            Predicate predicate = EntityPredicates.EXCEPT_CREATIVE_OR_SPECTATOR;
-
-            super(ocelotentity, oclass, f, d0, d1, predicate::test);
+            super(ocelotentity, oclass, f, d0, d1, EntityPredicates.EXCEPT_CREATIVE_OR_SPECTATOR::test); // Loom :: decompile error
             this.ocelot = ocelotentity;
         }
 
