--- a/net/minecraft/entity/mob/AbstractPiglinEntity.java
+++ b/net/minecraft/entity/mob/AbstractPiglinEntity.java
@@ -20,8 +20,9 @@
 
 public abstract class AbstractPiglinEntity extends HostileEntity {
 
-    protected static final TrackedData<Boolean> IMMUNE_TO_ZOMBIFICATION = DataTracker.registerData(AbstractPiglinEntity.class, TrackedDataHandlerRegistry.BOOLEAN);
-    protected int timeInOverworld = 0;
+    public static final int CONVERSION_TIME = 300;
+    public static final TrackedData<Boolean> IMMUNE_TO_ZOMBIFICATION = DataTracker.registerData(AbstractPiglinEntity.class, TrackedDataHandlerRegistry.BOOLEAN); // Loom :: public accessor
+    public int timeInOverworld = 0; // Loom :: public accessor
 
     public AbstractPiglinEntity(EntityType<? extends AbstractPiglinEntity> entitytype, World world) {
         super(entitytype, world);
@@ -80,7 +81,7 @@
             this.timeInOverworld = 0;
         }
 
-        if (this.timeInOverworld > 300) {
+        if (this.timeInOverworld > CONVERSION_TIME) {
             this.playZombificationSound();
             this.zombify((ServerWorld) this.world);
         }
@@ -91,6 +92,12 @@
         return !this.world.getDimension().isPiglinSafe() && !this.isImmuneToZombification() && !this.isAiDisabled();
     }
 
+    // Loom start :: custom zombify method
+    public void loomZombify() {
+        this.zombify((ServerWorld) this.world);
+    }
+    // Loom end :: custom zombify method
+
     protected void zombify(ServerWorld serverworld) {
         ZombifiedPiglinEntity zombifiedpiglinentity = (ZombifiedPiglinEntity) this.method_29243(EntityType.ZOMBIFIED_PIGLIN, true);
 
@@ -106,7 +113,7 @@
 
     @Nullable
     public LivingEntity getTarget() {
-        return (LivingEntity) this.brain.getOptionalMemory(MemoryModuleType.ATTACK_TARGET).orElse((Object) null);
+        return (LivingEntity) this.brain.getOptionalMemory(MemoryModuleType.ATTACK_TARGET).orElse(null); // Loom :: decompile error
     }
 
     protected boolean isHoldingTool() {
