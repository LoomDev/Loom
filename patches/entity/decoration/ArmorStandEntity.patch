--- a/net/minecraft/entity/decoration/ArmorStandEntity.java
+++ b/net/minecraft/entity/decoration/ArmorStandEntity.java
@@ -41,6 +41,13 @@
 
 public class ArmorStandEntity extends LivingEntity {
 
+    // Loom start :: loom additions
+    @Override
+    public org.loomdev.loom.entity.decoration.ArmorStandImpl getLoomEntity() {
+        return (org.loomdev.loom.entity.decoration.ArmorStandImpl) super.getLoomEntity();
+    }
+    // Loom end :: loom additions
+
     private static final EulerAngle DEFAULT_HEAD_ROTATION = new EulerAngle(0.0F, 0.0F, 0.0F);
     private static final EulerAngle DEFAULT_BODY_ROTATION = new EulerAngle(0.0F, 0.0F, 0.0F);
     private static final EulerAngle DEFAULT_LEFT_ARM_ROTATION = new EulerAngle(-10.0F, 0.0F, -10.0F);
@@ -64,10 +71,10 @@
     private int disabledSlots;
     private EulerAngle headRotation;
     private EulerAngle bodyRotation;
-    private EulerAngle leftArmRotation;
-    private EulerAngle rightArmRotation;
-    private EulerAngle leftLegRotation;
-    private EulerAngle rightLegRotation;
+    public EulerAngle leftArmRotation; // Loom :: public accessor
+    public EulerAngle rightArmRotation; // Loom :: public accessor
+    public EulerAngle leftLegRotation; // Loom :: public accessor
+    public EulerAngle rightLegRotation; // Loom :: public accessor
 
     public ArmorStandEntity(EntityType<? extends ArmorStandEntity> entitytype, World world) {
         super(entitytype, world);
@@ -631,7 +638,7 @@
         return this.isMarker() ? PistonBehavior.IGNORE : super.getPistonBehavior();
     }
 
-    private void setSmall(boolean flag) {
+    public void setSmall(boolean flag) { // Loom :: public accessor
         this.dataTracker.set(ArmorStandEntity.ARMOR_STAND_FLAGS, this.setBitField((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS), 1, flag));
     }
 
@@ -639,7 +646,7 @@
         return ((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS) & 1) != 0;
     }
 
-    private void setShowArms(boolean flag) {
+    public void setShowArms(boolean flag) { // Loom :: public accessor
         this.dataTracker.set(ArmorStandEntity.ARMOR_STAND_FLAGS, this.setBitField((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS), 4, flag));
     }
 
@@ -647,7 +654,7 @@
         return ((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS) & 4) != 0;
     }
 
-    private void setHideBasePlate(boolean flag) {
+    public void setHideBasePlate(boolean flag) { // Loom :: public accessor
         this.dataTracker.set(ArmorStandEntity.ARMOR_STAND_FLAGS, this.setBitField((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS), 8, flag));
     }
 
@@ -655,7 +662,7 @@
         return ((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS) & 8) != 0;
     }
 
-    private void setMarker(boolean flag) {
+    public void setMarker(boolean flag) { // Loom :: public accessor
         this.dataTracker.set(ArmorStandEntity.ARMOR_STAND_FLAGS, this.setBitField((Byte) this.dataTracker.get(ArmorStandEntity.ARMOR_STAND_FLAGS), 16, flag));
     }
 
