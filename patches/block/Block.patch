--- a/net/minecraft/block/Block.java
+++ b/net/minecraft/block/Block.java
@@ -58,9 +58,7 @@
             return !VoxelShapes.matchesAnywhere(VoxelShapes.fullCube(), voxelshape, BooleanBiFunction.NOT_SAME);
         }
 
-        public Object load(Object object) throws Exception {
-            return this.load((VoxelShape) object);
-        }
+        // Loom :: decompile error
     });
     protected final StateManager<Block, BlockState> stateManager;
     private BlockState defaultState;
@@ -261,7 +259,13 @@
                 int j = ExperienceOrbEntity.roundToOrbSize(i);
 
                 i -= j;
-                serverworld.spawnEntity(new ExperienceOrbEntity(serverworld, (double) blockpos.getX() + 0.5D, (double) blockpos.getY() + 0.5D, (double) blockpos.getZ() + 0.5D, j));
+                // Loom start :: fire BlockDroppedExperienceEvent
+                org.loomdev.loom.event.LoomEventDispatcher.onBlockDroppedExperience(serverworld, blockpos, j).thenAccept(event -> {
+                    if (!event.isCancelled()) {
+                        serverworld.spawnEntity(new ExperienceOrbEntity(serverworld, (double) blockpos.getX() + 0.5D, (double) blockpos.getY() + 0.5D, (double) blockpos.getZ() + 0.5D, event.getDroppedExperience()));
+                    }
+                });
+                // Loom end
             }
         }
 
