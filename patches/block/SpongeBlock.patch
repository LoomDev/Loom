--- a/net/minecraft/block/SpongeBlock.java
+++ b/net/minecraft/block/SpongeBlock.java
@@ -30,14 +30,14 @@
 
     protected void update(World world, BlockPos blockpos) {
         if (this.absorbWater(world, blockpos)) {
-            world.setBlockState(blockpos, Blocks.WET_SPONGE.getDefaultState(), 2);
-            world.syncWorldEvent(2001, blockpos, Block.getRawIdFromState(Blocks.WATER.getDefaultState()));
+            // Loom :: move down blockstate updates
         }
 
     }
 
     private boolean absorbWater(World world, BlockPos blockpos) {
         Queue<Pair<BlockPos, Integer>> queue = Lists.newLinkedList();
+        java.util.Set<org.loomdev.api.block.Block> absorbedBlocks = new java.util.HashSet<>(); // Loom :: track absorbed blocks
 
         queue.add(new Pair<>(blockpos, 0));
         int i = 0;
@@ -57,22 +57,21 @@
                 Material material = blockstate.getMaterial();
 
                 if (fluidstate.isIn(FluidTags.WATER)) {
-                    if (blockstate.getBlock() instanceof FluidDrainable && ((FluidDrainable) blockstate.getBlock()).tryDrainFluid(world, blockpos2, blockstate) != Fluids.EMPTY) {
+                    if (blockstate.getBlock() instanceof FluidDrainable) { // Loom :: move fluid drain down so the event can be cancelled properly
+                        absorbedBlocks.add(org.loomdev.loom.block.BlockImpl.at(world, blockpos2)); // Loom :: track absorbed blocks
                         ++i;
                         if (j < 6) {
                             queue.add(new Pair<>(blockpos2, j + 1));
                         }
                     } else if (blockstate.getBlock() instanceof FluidBlock) {
-                        world.setBlockState(blockpos2, Blocks.AIR.getDefaultState(), 3);
+                        absorbedBlocks.add(org.loomdev.loom.block.BlockImpl.at(world, blockpos2)); // Loom :: track absorbed blocks
                         ++i;
                         if (j < 6) {
                             queue.add(new Pair<>(blockpos2, j + 1));
                         }
                     } else if (material == Material.UNDERWATER_PLANT || material == Material.REPLACEABLE_UNDERWATER_PLANT) {
-                        BlockEntity blockentity = blockstate.getBlock().hasBlockEntity() ? world.getBlockEntity(blockpos2) : null;
-
-                        method_9610(blockstate, world, blockpos2, blockentity);
-                        world.setBlockState(blockpos2, Blocks.AIR.getDefaultState(), 3);
+                        // Loom :: don't drop stacks here so the event can be cancelled properly
+                        absorbedBlocks.add(org.loomdev.loom.block.BlockImpl.at(world, blockpos2)); // Loom :: track absorbed blocks
                         ++i;
                         if (j < 6) {
                             queue.add(new Pair<>(blockpos2, j + 1));
@@ -86,6 +85,39 @@
             }
         }
 
+        // Loom start :: fire SpongeAbsorbedEvent
+        final int finali = i;
+        org.loomdev.loom.event.LoomEventDispatcher.onSpongeAbsorbed(world, blockpos, absorbedBlocks).thenAccept(event -> {
+            if (event.isCancelled()) {
+                return;
+            }
+
+            for (org.loomdev.api.block.Block block : event.getAbsorbedBlocks()) {
+                org.loomdev.loom.block.BlockImpl blockImpl = (org.loomdev.loom.block.BlockImpl) block;
+
+                BlockState state = blockImpl.getMinecraftBlock();
+                BlockPos pos = blockImpl.getMinecraftPos();
+                World world1 = (World) blockImpl.getMinecraftWorld();
+                Material material1 = state.getMaterial();
+
+                if (state.getBlock() instanceof FluidDrainable && ((FluidDrainable) blockImpl.getMinecraftBlock().getBlock()).tryDrainFluid(world1, pos, state) != Fluids.EMPTY) {
+                    // NOOP
+                } else if (state.getBlock() instanceof FluidBlock) {
+                    world1.setBlockState(pos, Blocks.AIR.getDefaultState(), 3);
+                } else if (material1 == Material.UNDERWATER_PLANT || material1 == Material.REPLACEABLE_UNDERWATER_PLANT) {
+                    BlockEntity blockentity = state.getBlock().hasBlockEntity() ? world1.getBlockEntity(pos) : null;
+                    method_9610(state, world1, pos, blockentity);
+                    world1.setBlockState(pos, Blocks.AIR.getDefaultState(), 3);
+                }
+            }
+
+            if (finali > 0) {
+                world.setBlockState(blockpos, Blocks.WET_SPONGE.getDefaultState(), 2);
+                world.syncWorldEvent(2001, blockpos, Block.getRawIdFromState(Blocks.WATER.getDefaultState()));
+            }
+        });
+        // Loom end
+
         return i > 0;
     }
 }
